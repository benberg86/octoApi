# coding: utf-8

"""
    Octopus Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2019.13.4+Branch.tags-2019.13.4.Sha.0d7b19b0ef3b9f74ec58e5c86ae6af95165ef70e
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.certificates_api import CertificatesApi  # noqa: E501
from swagger_client.rest import ApiException


class TestCertificatesApi(unittest.TestCase):
    """CertificatesApi unit test stubs"""

    def setUp(self):
        self.api = api.certificates_api.CertificatesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_certificate(self):
        """Test case for create_certificate

        Create a CertificateResource  # noqa: E501
        """
        pass

    def test_create_certificate_archive(self):
        """Test case for create_certificate_archive

        """
        pass

    def test_create_certificate_archive_spaces(self):
        """Test case for create_certificate_archive_spaces

        """
        pass

    def test_create_certificate_replace(self):
        """Test case for create_certificate_replace

        """
        pass

    def test_create_certificate_replace_spaces(self):
        """Test case for create_certificate_replace_spaces

        """
        pass

    def test_create_certificate_spaces(self):
        """Test case for create_certificate_spaces

        Create a CertificateResource  # noqa: E501
        """
        pass

    def test_create_certificate_un_archive(self):
        """Test case for create_certificate_un_archive

        """
        pass

    def test_create_certificate_un_archive_spaces(self):
        """Test case for create_certificate_un_archive_spaces

        """
        pass

    def test_delete_certificate(self):
        """Test case for delete_certificate

        Delete a CertificateResource by ID  # noqa: E501
        """
        pass

    def test_delete_certificate_spaces(self):
        """Test case for delete_certificate_spaces

        Delete a CertificateResource by ID  # noqa: E501
        """
        pass

    def test_get_certificate_by_id_or_thumbprint(self):
        """Test case for get_certificate_by_id_or_thumbprint

        """
        pass

    def test_get_certificate_by_id_or_thumbprint_spaces(self):
        """Test case for get_certificate_by_id_or_thumbprint_spaces

        """
        pass

    def test_get_certificate_export(self):
        """Test case for get_certificate_export

        """
        pass

    def test_get_certificate_export_spaces(self):
        """Test case for get_certificate_export_spaces

        """
        pass

    def test_get_certificate_usage(self):
        """Test case for get_certificate_usage

        """
        pass

    def test_get_certificate_usage_spaces(self):
        """Test case for get_certificate_usage_spaces

        """
        pass

    def test_index_certificates(self):
        """Test case for index_certificates

        Get a list of CertificateResources  # noqa: E501
        """
        pass

    def test_index_certificates_spaces(self):
        """Test case for index_certificates_spaces

        Get a list of CertificateResources  # noqa: E501
        """
        pass

    def test_list_all_certificates(self):
        """Test case for list_all_certificates

        Get a list of CertificateResources  # noqa: E501
        """
        pass

    def test_list_all_certificates_spaces(self):
        """Test case for list_all_certificates_spaces

        Get a list of CertificateResources  # noqa: E501
        """
        pass

    def test_update_certificate(self):
        """Test case for update_certificate

        Modify a CertificateResource by ID  # noqa: E501
        """
        pass

    def test_update_certificate_spaces(self):
        """Test case for update_certificate_spaces

        Modify a CertificateResource by ID  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
