# coding: utf-8

"""
    Octopus Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2019.13.4+Branch.tags-2019.13.4.Sha.0d7b19b0ef3b9f74ec58e5c86ae6af95165ef70e
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.machine_policies_api import MachinePoliciesApi  # noqa: E501
from swagger_client.rest import ApiException


class TestMachinePoliciesApi(unittest.TestCase):
    """MachinePoliciesApi unit test stubs"""

    def setUp(self):
        self.api = api.machine_policies_api.MachinePoliciesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_machine_policy(self):
        """Test case for create_machine_policy

        Create a MachinePolicyResource  # noqa: E501
        """
        pass

    def test_create_machine_policy_spaces(self):
        """Test case for create_machine_policy_spaces

        Create a MachinePolicyResource  # noqa: E501
        """
        pass

    def test_delete_machine_policy(self):
        """Test case for delete_machine_policy

        """
        pass

    def test_delete_machine_policy_spaces(self):
        """Test case for delete_machine_policy_spaces

        """
        pass

    def test_get_machine_policy_by_id(self):
        """Test case for get_machine_policy_by_id

        Get a MachinePolicyResource by ID  # noqa: E501
        """
        pass

    def test_get_machine_policy_by_id_spaces(self):
        """Test case for get_machine_policy_by_id_spaces

        Get a MachinePolicyResource by ID  # noqa: E501
        """
        pass

    def test_get_machine_policy_template(self):
        """Test case for get_machine_policy_template

        """
        pass

    def test_get_machine_policy_template_spaces(self):
        """Test case for get_machine_policy_template_spaces

        """
        pass

    def test_index_machine_policies(self):
        """Test case for index_machine_policies

        Get a list of MachinePolicyResources  # noqa: E501
        """
        pass

    def test_index_machine_policies_spaces(self):
        """Test case for index_machine_policies_spaces

        Get a list of MachinePolicyResources  # noqa: E501
        """
        pass

    def test_index_machine_policy_deployment_targets(self):
        """Test case for index_machine_policy_deployment_targets

        Get a list of DeploymentTargetResources for the given MachinePolicyResource  # noqa: E501
        """
        pass

    def test_index_machine_policy_deployment_targets_spaces(self):
        """Test case for index_machine_policy_deployment_targets_spaces

        Get a list of DeploymentTargetResources for the given MachinePolicyResource  # noqa: E501
        """
        pass

    def test_index_machine_policy_workers(self):
        """Test case for index_machine_policy_workers

        Get a list of WorkerResources for the given MachinePolicyResource  # noqa: E501
        """
        pass

    def test_index_machine_policy_workers_spaces(self):
        """Test case for index_machine_policy_workers_spaces

        Get a list of WorkerResources for the given MachinePolicyResource  # noqa: E501
        """
        pass

    def test_list_all_machine_policies(self):
        """Test case for list_all_machine_policies

        Get a list of MachinePolicyResources  # noqa: E501
        """
        pass

    def test_list_all_machine_policies_spaces(self):
        """Test case for list_all_machine_policies_spaces

        Get a list of MachinePolicyResources  # noqa: E501
        """
        pass

    def test_update_machine_policy(self):
        """Test case for update_machine_policy

        Modify a MachinePolicyResource by ID  # noqa: E501
        """
        pass

    def test_update_machine_policy_spaces(self):
        """Test case for update_machine_policy_spaces

        Modify a MachinePolicyResource by ID  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
