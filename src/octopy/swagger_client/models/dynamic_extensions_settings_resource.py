# coding: utf-8

"""
    Octopus Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2019.13.4+Branch.tags-2019.13.4.Sha.0d7b19b0ef3b9f74ec58e5c86ae6af95165ef70e
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class DynamicExtensionsSettingsResource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'configuration_retrieved': 'bool',
        'serial_hash': 'str',
        'installation_id': 'str',
        'server_version': 'str',
        'server_api_version': 'str',
        'scripts': 'list[DynamicExtensionsJsFile]'
    }

    attribute_map = {
        'configuration_retrieved': 'ConfigurationRetrieved',
        'serial_hash': 'SerialHash',
        'installation_id': 'InstallationId',
        'server_version': 'ServerVersion',
        'server_api_version': 'ServerApiVersion',
        'scripts': 'Scripts'
    }

    def __init__(self, configuration_retrieved=None, serial_hash=None, installation_id=None, server_version=None, server_api_version=None, scripts=None):  # noqa: E501
        """DynamicExtensionsSettingsResource - a model defined in Swagger"""  # noqa: E501
        self._configuration_retrieved = None
        self._serial_hash = None
        self._installation_id = None
        self._server_version = None
        self._server_api_version = None
        self._scripts = None
        self.discriminator = None
        if configuration_retrieved is not None:
            self.configuration_retrieved = configuration_retrieved
        if serial_hash is not None:
            self.serial_hash = serial_hash
        if installation_id is not None:
            self.installation_id = installation_id
        if server_version is not None:
            self.server_version = server_version
        if server_api_version is not None:
            self.server_api_version = server_api_version
        if scripts is not None:
            self.scripts = scripts

    @property
    def configuration_retrieved(self):
        """Gets the configuration_retrieved of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The configuration_retrieved of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: bool
        """
        return self._configuration_retrieved

    @configuration_retrieved.setter
    def configuration_retrieved(self, configuration_retrieved):
        """Sets the configuration_retrieved of this DynamicExtensionsSettingsResource.


        :param configuration_retrieved: The configuration_retrieved of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: bool
        """

        self._configuration_retrieved = configuration_retrieved

    @property
    def serial_hash(self):
        """Gets the serial_hash of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The serial_hash of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: str
        """
        return self._serial_hash

    @serial_hash.setter
    def serial_hash(self, serial_hash):
        """Sets the serial_hash of this DynamicExtensionsSettingsResource.


        :param serial_hash: The serial_hash of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: str
        """

        self._serial_hash = serial_hash

    @property
    def installation_id(self):
        """Gets the installation_id of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The installation_id of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: str
        """
        return self._installation_id

    @installation_id.setter
    def installation_id(self, installation_id):
        """Sets the installation_id of this DynamicExtensionsSettingsResource.


        :param installation_id: The installation_id of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: str
        """

        self._installation_id = installation_id

    @property
    def server_version(self):
        """Gets the server_version of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The server_version of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: str
        """
        return self._server_version

    @server_version.setter
    def server_version(self, server_version):
        """Sets the server_version of this DynamicExtensionsSettingsResource.


        :param server_version: The server_version of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: str
        """

        self._server_version = server_version

    @property
    def server_api_version(self):
        """Gets the server_api_version of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The server_api_version of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: str
        """
        return self._server_api_version

    @server_api_version.setter
    def server_api_version(self, server_api_version):
        """Sets the server_api_version of this DynamicExtensionsSettingsResource.


        :param server_api_version: The server_api_version of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: str
        """

        self._server_api_version = server_api_version

    @property
    def scripts(self):
        """Gets the scripts of this DynamicExtensionsSettingsResource.  # noqa: E501


        :return: The scripts of this DynamicExtensionsSettingsResource.  # noqa: E501
        :rtype: list[DynamicExtensionsJsFile]
        """
        return self._scripts

    @scripts.setter
    def scripts(self, scripts):
        """Sets the scripts of this DynamicExtensionsSettingsResource.


        :param scripts: The scripts of this DynamicExtensionsSettingsResource.  # noqa: E501
        :type: list[DynamicExtensionsJsFile]
        """

        self._scripts = scripts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DynamicExtensionsSettingsResource, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DynamicExtensionsSettingsResource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
